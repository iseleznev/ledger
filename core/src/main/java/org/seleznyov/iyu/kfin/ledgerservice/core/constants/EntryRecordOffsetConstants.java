package org.seleznyov.iyu.kfin.ledgerservice.core.constants;

import java.lang.foreign.ValueLayout;

import static org.seleznyov.iyu.kfin.ledgerservice.core.constants.CommonConstants.CPU_CACHE_LINE_SIZE;

public interface EntryRecordOffsetConstants {
    int FIELD_COUNT_OFFSET = 0;
    ValueLayout FIELD_COUNT_TYPE = ValueLayout.JAVA_SHORT;

    ValueLayout.OfShort LENGTH_TYPE = ValueLayout.JAVA_SHORT;

    int AMOUNT_LENGTH_OFFSET = (int) (FIELD_COUNT_OFFSET + FIELD_COUNT_TYPE.byteSize());

    int AMOUNT_OFFSET = (int) (AMOUNT_LENGTH_OFFSET + LENGTH_TYPE.byteSize());
    ValueLayout.OfLong AMOUNT_TYPE = ValueLayout.JAVA_LONG;

    int ENTRY_TYPE_LENGTH_OFFSET = (int) (AMOUNT_OFFSET + AMOUNT_TYPE.byteSize());

    int ENTRY_TYPE_OFFSET = (int) (ENTRY_TYPE_LENGTH_OFFSET + LENGTH_TYPE.byteSize());
    ValueLayout.OfShort ENTRY_TYPE_TYPE = ValueLayout.JAVA_SHORT;

    int ENTRY_RECORD_ID_LENGTH_OFFSET = (int) (ENTRY_TYPE_OFFSET + ENTRY_TYPE_TYPE.byteSize());

    int ENTRY_RECORD_ID_MSB_OFFSET = (int) (ENTRY_RECORD_ID_LENGTH_OFFSET + LENGTH_TYPE.byteSize());
    ValueLayout.OfLong ENTRY_RECORD_ID_SB_TYPE = ValueLayout.JAVA_LONG;
    int ENTRY_RECORD_ID_LSB_OFFSET = (int) (ENTRY_RECORD_ID_MSB_OFFSET + ENTRY_RECORD_ID_SB_TYPE.byteSize());

    int CREATED_AT_LENGTH_OFFSET = (int) (ENTRY_RECORD_ID_LSB_OFFSET + ENTRY_RECORD_ID_SB_TYPE.byteSize());
    int CREATED_AT_OFFSET = (int) (CREATED_AT_LENGTH_OFFSET + LENGTH_TYPE.byteSize());
    ValueLayout.OfLong CREATED_AT_TYPE = ValueLayout.JAVA_LONG;

    int OPERATION_DAY_LENGTH_OFFSET = (int) (CREATED_AT_OFFSET + CREATED_AT_TYPE.byteSize());
    int OPERATION_DAY_OFFSET = (int) (OPERATION_DAY_LENGTH_OFFSET + LENGTH_TYPE.byteSize());
    ValueLayout.OfLong OPERATION_DAY_TYPE = ValueLayout.JAVA_LONG;

    int ACCOUNT_ID_LENGTH_OFFSET = (int) (OPERATION_DAY_OFFSET + OPERATION_DAY_TYPE.byteSize());
    int ACCOUNT_ID_MSB_OFFSET = (int) (ACCOUNT_ID_LENGTH_OFFSET + LENGTH_TYPE.byteSize());
    ValueLayout.OfLong ACCOUNT_ID_TYPE = ValueLayout.JAVA_LONG;
    int ACCOUNT_ID_LSB_OFFSET = (int) (ACCOUNT_ID_MSB_OFFSET + ACCOUNT_ID_TYPE.byteSize());

    int ENTRY_RECORD_TRANSFER_ID_LENGTH_OFFSET = (int) (ACCOUNT_ID_LSB_OFFSET + ACCOUNT_ID_TYPE.byteSize());
    int ENTRY_RECORD_TRANSFER_ID_MSB_OFFSET = (int) (ENTRY_RECORD_TRANSFER_ID_LENGTH_OFFSET + LENGTH_TYPE.byteSize());
    ValueLayout.OfLong ENTRY_RECORD_TRANSFER_ID_TYPE = ValueLayout.JAVA_LONG;
    int ENTRY_RECORD_TRANSFER_ID_LSB_OFFSET = (int) (ENTRY_RECORD_TRANSFER_ID_MSB_OFFSET + ENTRY_RECORD_TRANSFER_ID_TYPE.byteSize());

    int IDEMPOTENCY_KEY_LENGTH_OFFSET = (int) (ENTRY_RECORD_TRANSFER_ID_LSB_OFFSET + ENTRY_RECORD_TRANSFER_ID_TYPE.byteSize());
    int IDEMPOTENCY_KEY_MSB_OFFSET = (int) (IDEMPOTENCY_KEY_LENGTH_OFFSET + LENGTH_TYPE.byteSize());
    ValueLayout.OfLong IDEMPOTENCY_KEY_TYPE = ValueLayout.JAVA_LONG;
    int IDEMPOTENCY_KEY_LSB_OFFSET = (int) (IDEMPOTENCY_KEY_MSB_OFFSET + IDEMPOTENCY_KEY_TYPE.byteSize());

    int CURRENCY_CODE_LENGTH_OFFSET = (int) (IDEMPOTENCY_KEY_LSB_OFFSET + IDEMPOTENCY_KEY_TYPE.byteSize());
    int CURRENCY_CODE_OFFSET = (int) (CURRENCY_CODE_LENGTH_OFFSET + LENGTH_TYPE.byteSize());
    ValueLayout.OfLong CURRENCY_CODE_TYPE = ValueLayout.JAVA_LONG;

    int ORDINAL_LENGTH_OFFSET = (int) (CURRENCY_CODE_OFFSET + CURRENCY_CODE_TYPE.byteSize());
    int ORDINAL_OFFSET = (int) (ORDINAL_LENGTH_OFFSET + LENGTH_TYPE.byteSize());
    ValueLayout.OfLong ORDINAL_TYPE = ValueLayout.JAVA_LONG;

    int POSTGRES_ENTRY_RECORD_RAW_SIZE = (int) (ORDINAL_OFFSET + ORDINAL_TYPE.byteSize());

    int POSTGRES_ENTRY_RECORD_SIZE = (POSTGRES_ENTRY_RECORD_RAW_SIZE + CPU_CACHE_LINE_SIZE - 1) & -CPU_CACHE_LINE_SIZE;
}
