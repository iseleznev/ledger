package org.seleznyov.iyu.kfin.ledgerservice.core.constants;

import static org.seleznyov.iyu.kfin.ledgerservice.core.constants.CommonConstants.CPU_CACHE_LINE_SIZE;

public interface AccountPartitionMmemHashTableConstants {

    short EMPTY = 0;
    short OCCUPIED = 1;
    short DELETED = 3;

    short RATE_COLD_ACCOUNT = 0;
    short RATE_WARM_ACCOUNT = 1;
    short RATE_HOT_ACCOUNT = 3;

    long SNAPSHOT_INDEX_MAGIC = 0x4944585231L; // "LDGRSNIX"

    int SNAPSHOT_INDEX_HEADER_SIZE = 64;

    int MSB_OFFSET = 0;
    int LSB_OFFSET = MSB_OFFSET + LONG_TYPE_SIZE;
    int BALANCE_OFFSET = LSB_OFFSET + LONG_TYPE_SIZE;
    int ORDINAL_OFFSET = BALANCE_OFFSET + LONG_TYPE_SIZE;
    int COUNT_OFFSET = ORDINAL_OFFSET + LONG_TYPE_SIZE;
    int STATE_OFFSET = COUNT_OFFSET + LONG_TYPE_SIZE;
    int ACCOUNT_RATE_OFFSET = STATE_OFFSET + SHORT_TYPE_SIZE;
    int PSL_OFFSET = ACCOUNT_RATE_OFFSET + SHORT_TYPE_SIZE;
    int TABLE_ORDINAL_OFFSET = PSL_OFFSET + INT_TYPE_SIZE;//CPU_CACHE_LINE_SIZE;
    int STAGED_AMOUNT_OFFSET = TABLE_ORDINAL_OFFSET + LONG_TYPE_SIZE;
    int STAGED_AMOUNT_BOUND_OFFSET = STAGED_AMOUNT_OFFSET + LONG_TYPE_SIZE;

    int LONG_TYPE_SIZE = 8;
    int INT_TYPE_SIZE = 4;
    int SHORT_TYPE_SIZE = 2;

    int MSB_OFFSET = 0;
    int LSB_OFFSET = MSB_OFFSET + LONG_TYPE_SIZE;
    int BALANCE_OFFSET = LSB_OFFSET + LONG_TYPE_SIZE;
    int ORDINAL_OFFSET = BALANCE_OFFSET + LONG_TYPE_SIZE;
    int COUNT_OFFSET = ORDINAL_OFFSET + LONG_TYPE_SIZE;
    int STATE_OFFSET = COUNT_OFFSET + LONG_TYPE_SIZE;
    int ACCOUNT_RATE_OFFSET = STATE_OFFSET + SHORT_TYPE_SIZE;
    int PSL_OFFSET = ACCOUNT_RATE_OFFSET + SHORT_TYPE_SIZE;
    int TABLE_ORDINAL_OFFSET = PSL_OFFSET + INT_TYPE_SIZE;//CPU_CACHE_LINE_SIZE;
    int STAGED_AMOUNT_OFFSET = TABLE_ORDINAL_OFFSET + LONG_TYPE_SIZE;
    int STAGED_AMOUNT_BOUND_OFFSET = STAGED_AMOUNT_OFFSET + LONG_TYPE_SIZE;

    int PSL_SIZE = 4;

    int MAP_ENTRY_SIZE = (STAGED_AMOUNT_BOUND_OFFSET + CPU_CACHE_LINE_SIZE - 1) & -CPU_CACHE_LINE_SIZE;

    // Robin Hood параметры
//    int MAX_PSL = 16; // Максимальный Probe Sequence Length
    double LOAD_FACTOR = 0.85; // Агрессивный для экономии памяти
    int PREALLOC_CHUNK = 1_048_576; // 1M элементов
}
