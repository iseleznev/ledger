package org.seleznyov.iyu.kfin.ledgerservice.core.constants;

import static org.seleznyov.iyu.kfin.ledgerservice.core.constants.CommonConstants.CPU_CACHE_LINE_SIZE;

public interface StateChunkHashTableConstants {

    short EMPTY = 0;
    short OCCUPIED = 1;
    short DELETED = 3;

    short RATE_COLD_ACCOUNT = 0;
    short RATE_WARM_ACCOUNT = 1;
    short RATE_HOT_ACCOUNT = 3;

    int LONG_TYPE_SIZE = 8;
    int INT_TYPE_SIZE = 4;
    int SHORT_TYPE_SIZE = 2;

    int STATE_ACCOUNT_ID_MSB_OFFSET = 0;
    int STATE_ACCOUNT_ID_LSB_OFFSET = STATE_ACCOUNT_ID_MSB_OFFSET + LONG_TYPE_SIZE;
    int STATE_BALANCE_OFFSET = STATE_ACCOUNT_ID_LSB_OFFSET + LONG_TYPE_SIZE;
    int STATE_ORDINAL_OFFSET = STATE_BALANCE_OFFSET + LONG_TYPE_SIZE;
    int STATE_COUNT_OFFSET = STATE_ORDINAL_OFFSET + LONG_TYPE_SIZE;
    int STATE_STATE_OFFSET = STATE_COUNT_OFFSET + LONG_TYPE_SIZE;
    int STATE_ACCOUNT_RATE_OFFSET = STATE_STATE_OFFSET + SHORT_TYPE_SIZE;
    int STATE_PSL_OFFSET = STATE_ACCOUNT_RATE_OFFSET + SHORT_TYPE_SIZE;
    int STATE_CURRENT_ORDINAL_SEQUENCE_OFFSET = STATE_PSL_OFFSET + INT_TYPE_SIZE;//CPU_CACHE_LINE_SIZE;
    int STATE_STAGED_AMOUNT_OFFSET = STATE_CURRENT_ORDINAL_SEQUENCE_OFFSET + LONG_TYPE_SIZE;
    int STATE_STAGED_AMOUNT_BOUND_OFFSET = STATE_STAGED_AMOUNT_OFFSET + LONG_TYPE_SIZE;
    int STATE_WAL_SEQUENCE_ID_OFFSET = STATE_STAGED_AMOUNT_BOUND_OFFSET + LONG_TYPE_SIZE;

    int PSL_SIZE = 4;

    int STATE_MAP_ENTRY_SIZE = (STATE_WAL_SEQUENCE_ID_OFFSET + CPU_CACHE_LINE_SIZE - 1) & -CPU_CACHE_LINE_SIZE;
}
